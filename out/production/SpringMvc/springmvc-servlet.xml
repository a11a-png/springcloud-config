<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd ">


       <!--添加了MVC命名空间后 必须!!!!!添加mvc:annotation-driven-->
       <mvc:annotation-driven/>
       <!--配置扫描路径-->
       <context:component-scan base-package="com.wjg.controller,com.wjg.exception"/>
       <!--配置视图解析器 jsp-->
       <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
       <!--配置视图路径的前缀 WEB-INF下的一切都是受保护的，浏览器无法访问-->
       <property name="prefix" value="/WEB-INF/jsp/"/>
       <!--后缀 -->
       <property name="suffix" value=".jsp"/>
       </bean>

       <!--配置静态资源的映射-->
       <mvc:resources location="/js/" mapping="/js/**"/>
       <mvc:resources location="/css/" mapping="/css/**"/>
       <mvc:resources location="/static/" mapping="/static/**"/>

       <!-- 配置MultipartResolver 文件上传下载 -->
       <!-- id必须为multipartResolver -->
       <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
            <!-- 文件上传总大小的最大值,单位字节 100M=100*1024*1024 -->
            <property name="maxInMemorySize" value="104857600"/>
            <!-- 单个上传的文件大小,单位字节 10M=10*1024*1024-->
            <property name="maxUploadSizePerFile" value="10485760" />
            <!--编码方式-->
            <property name="defaultEncoding" value="UTF-8"/>

           <!--当 resolveLazily为false（默认）时，会立即调用 parseRequest() 方法对请求数据进行解析，
             然后将解析结果封装到 DefaultMultipartHttpServletRequest中；(不经控制器)
             而当resolveLazily为 true时，会在DefaultMultipartHttpServletRequest的initializeMultipart()方法调用parseRequest()方法对请求数据进行解析，
             而initializeMultipart()方法又是被getMultipartFiles()方法调用，（会经过控制器）
             即当需要获取文件信息时才会去解析请求数据，这种方式用了懒加载的思想。-->
           <property name="resolveLazily" value="true"/>
       </bean>

       <!-- 全局匹配异常 -->
    <!--SimpleMappingExceptionResolver 全局异常配置-->
    <!--是全局异常，但是HTTP状态异常捕获不到-->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <!-- 默认的异常界面，如果不是特殊指定的异常，都显示这个界面 -->
        <property name="defaultErrorView" value="/ErrorML/simpleDefaultErr" />
        <!-- 异常变量的名称，界面上可以使用这个来输出异常信息 -->
        <property name="exceptionAttribute" value="ex" />
        <!-- 指定特殊异常，并为特殊异常指定特定的界面 -->
        <property name="exceptionMappings">
            <props>
                <!--key为需要特殊指定的异常的完整类名，prop元素中指定页面的路径-->
                <!--文件上传相关异常-->
                <prop key="org.springframework.web.multipart.MultipartException">/ErrorML/simpleFileUploadErr</prop>
                <!--演示除0异常  ArithmeticException算术异常-->
                <prop key="java.lang.ArithmeticException">/ErrorML/arithmeticErr</prop>
            </props>
        </property>
    </bean>

     <!-- Interceptor 拦截器 -->
     <!-- interceptors可配置多个拦截器-->
     <mvc:interceptors>
         <!-- 配置拦截器 -->
         <mvc:interceptor>
            <!-- 配置拦截资源 /** 代表拦截所有请求-->
             <mvc:mapping path="/**"/>
             <!-- 配置排除拦截静态资源 -->
             <!-- 根据文件类型排除 -->
             <mvc:exclude-mapping path="/**/*.png"/>
             <mvc:exclude-mapping path="/**/*.js"/>
             <mvc:exclude-mapping path="/**/*.css"/>
             <mvc:exclude-mapping path="/**/*.jpg"/>
             <!-- 配置拦截器Bean对象 -->
             <bean class="com.wjg.intercept.Interceptor"></bean>
         </mvc:interceptor>

         <!-- 配置拦截器 -->
         <mvc:interceptor>
             <!-- 配置拦截资源 /** 代表拦截所有请求-->
             <mvc:mapping path="/**"/>
             <!-- 配置排除拦截静态资源 -->
             <!-- 根据目录排除 -->
             <mvc:exclude-mapping path="/js/**"/>
             <mvc:exclude-mapping path="/css/**"/>
             <!-- 配置拦截器Bean对象 -->
             <bean class="com.wjg.intercept.Interceptor2"></bean>
         </mvc:interceptor>
     </mvc:interceptors>


</beans>